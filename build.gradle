buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

//group = 'ch.so.agi.ilivalidator-web-service'
group = 'sogis'
version = '0.0.8-SNAPSHOT'

description = """ilivalidator web service"""

springBoot {
    executable = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven { url "http://sogeo.services/maven/repository/release/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    compile "commons-io:commons-io:2.5"
    compile "org.interlis2:ilivalidator:1.3.0"
    compile "org.webjars:materializecss:0.97.7"
    compile "org.webjars:jquery:2.2.4"
	compile "io.rest-assured:rest-assured:3.0.3"
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
		exclude(module: 'commons-logging')
    }
}

test {
	testLogging {
		showStandardStreams = true
	}
}

task buildDocker(type: Docker, dependsOn: build) {
  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
